ChatServer : 
package exp3b; 
import java.io.*; 
import java.net.*; 
import java.util.*; 
public class ChatServer { 
    public static void main(String args[]) { 
        try { 
            ServerSocket ss = new ServerSocket(6666); 
            System.out.println("Server started. Waiting for client..."); 
            Socket s = ss.accept(); 
            System.out.println("Client connected."); 
           DataInputStream din = new DataInputStream(s.getInputStream()); 
            DataOutputStream dout = new DataOutputStream(s.getOutputStream()); 
            Scanner input = new Scanner(System.in); 
            String senddata = ""; 
            String recievedata = ""; 
            while (!recievedata.equals("stop")) { 
                recievedata = din.readUTF(); 
                System.out.println("CLIENT SAYS: " + recievedata); 
                System.out.print("TO CLIENT: "); 
                senddata = input.nextLine(); 
                dout.writeUTF(senddata); 
            } din.close(); 
            dout.close(); 
            s.close(); 
            ss.close(); 
        } catch (Exception e) { 
            System.out.println(e)  } } } 
ChatClient : 
package exp3b; 
import java.io.*; 
import java.net.*; 
import java.util.*; 
public class ChatClient { 
    public static void main(String args[]) { 
        try { 
            Socket s = new Socket("localhost", 6666); 
            System.out.println("Connected to server."); 
            DataInputStream din = new DataInputStream(s.getInputStream()); 
            DataOutputStream dout = new DataOutputStream(s.getOutputStream()); 
            Scanner input = new Scanner(System.in); 
            String senddata = ""; 
            String recievedata = ""; 
            while (!senddata.equals("stop")) { 
                System.out.print("TO SERVER: "); 
                senddata = input.nextLine(); 
                dout.writeUTF(senddata); 
                recievedata = din.readUTF(); 
                System.out.println("SERVER SAYS: " + recievedata); 
            }din.close(); 
            dout.close(); 
            s.close(); 
        } catch (Exception e) { 
            System.out.println(e); 
        } 
    }}
